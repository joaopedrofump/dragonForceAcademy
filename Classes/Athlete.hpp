//
//  Athlete.hpp
//  DragonForceAcadamy
//
//  Created by Joao Furriel on 12/10/16.
//  Copyright © 2016 João Furriel Pinheiro. All rights reserved.
//
#pragma once

#ifndef Athlete_hpp
#define Athlete_hpp

#include "Coach.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	An athlete. </summary>
///
/// <remarks>	Luís, 20/11/2016. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class Athlete : public Worker {
    
protected:
    /// <summary>	Athlete's height. </summary>
    unsigned char height;
    /// <summary>	pointer to ecg when there's an athlete's class. </summary>
    ECG* ecg;
	/// <summary>	Athlete's position. </summary>
	Position position;

public:
	
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Athlete's Constructor. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="name">			The name. </param>
    /// <param name="birthdate">	The birthdate. </param>
    /// <param name="civilID">  	Identifier for the civil. </param>
    /// <param name="height">   	The height. </param>
    /// <param name="id">			(Optional) The identifier. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    Athlete(string name, Date birthdate, unsigned int civilID, unsigned char height, unsigned int id = 0);
	

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Athlete's Constructor that reads from the athlete's file. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="newAthlete">	[in,out] The new athlete. </param>
	/// <param name="position">  	The position. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Athlete(string &newAthlete, Position position);


	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Destructor. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	~Athlete();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Gets the athlete's position. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	The athlete's position. </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    unsigned int getPosition() const;


	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the athlete's height. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	The athlete's height. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	unsigned int getHeight() const;



	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the athlete's ecg. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	Null if it fails, else the ecg. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	ECG* getECG() const;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Updates the ecg. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="resultado">	 	True to result. </param>
    /// <param name="expirationDate">	The expiration date. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void updateECG(bool resultado, Date expirationDate);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Query if this object is athlete. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	True if athlete, false if not. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	bool isAthlete() const;
    


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Generates the athlete's performance information. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	The athlete's performance information. </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    string generateInfo() const;
    
	/*!
	*	This is a method that shows all the athlete's informaton on the screen
	*/

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Shows all the athlete's information in screen. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	A vector of strings; </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    vector<string> showInScreen() const;
    

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Sets birth date. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="newBirthdate">	The new birthdate. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void setBirthDate(Date newBirthdate);
    


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Sets the athlete's height. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="newHeight">	New height. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    void setHeight(unsigned int newHeight);
};

#endif /* Athlete_hpp */
