#pragma once


#include "Athlete.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	A forward. </summary>
///
/// <remarks>	Luís, 20/11/2016. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class Forward : public Athlete
{
private:
    /// <summary>	forward's general information. </summary>
    Info* generalInfo;

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Constructor. The id is set automatically </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="name">			The name. </param>
	/// <param name="birthdate">	The birthdate. </param>
	/// <param name="civilID">  	Civil identifier. </param>
	/// <param name="height">   	The height. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Forward(string name, Date birthdate, unsigned int civilID, unsigned char height, unsigned id = 0);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Constructor that reads from the athletes file </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="newFW">	[in,out] The new firmware. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Forward(string &newFW);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Destructor. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	~Forward();
	

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the forward's identifier. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	The forward's identifier. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	unsigned int getID() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the forward's performance information. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	Null if it fails, else the forward's performance information. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Info* getInfo() const;
    
	/*!
	*	This is a method that adds information to the forward
	*/

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Adds performance information to the forward. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="moreInfo">	[in,out] If non-null, forward's performance information. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void addInfo(Info* moreInfo);


};
