#pragma once

/*#include <stdio.h>
#include <iostream>*/
#include "Worker.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	A coach. </summary>
///
/// <remarks>	Luís, 20/11/2016. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class Coach : public Worker {

private:
	/// <summary>	coach's position. </summary>
	CoachType trainerPosition;

public:
	
	//! Coach constructor
	/*!
	*	This is a constructor that uses the name, birthdate, civilID, coach's role and id
	*/

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Coach's Constructor. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="name">			The name. </param>
	/// <param name="birthdate">	The birthdate. </param>
	/// <param name="civilID">  	Civil identifier. </param>
	/// <param name="coachRole">	The coach role. </param>
	/// <param name="id">			(Optional) The identifier. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Coach(string name, Date birthdate, unsigned int civilID, CoachType coachRole, unsigned int id = 0);
	
	/*!
	*	This is a constructor that uses the coach's name
	*/

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Coach's Constructor that reads from the coaches' file. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <param name="newCoach">	[in,out] The new coach. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Coach(string &newCoach);
	


	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the coach's identifier. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	The coach's identifier. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	unsigned int getID() const;

	/*!
	*	This is a method that checks if the worker is an athlete
	*/

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Query if this object is athlete. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	True if athlete, false if not. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	bool isAthlete() const;

	/*!
	*	This is a method that gets the coach's position
	*/

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the coach's position. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	The coah's position. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	unsigned int getPosition() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the coach's height. </summary>
	///
	/// <remarks>	Luís, 20/11/2016. </remarks>
	///
	/// <returns>	The coach's height. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	unsigned int getHeight() const;

	/*!
	*	This is a method that gets the coach's information
	*/

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Gets the coach's information. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	Null if it fails, else the coach's information. </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    Info* getInfo() const { Info* res = new Info(); return res;};

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Adds an information. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="moreInfo">	 If non-null, all the coach's information. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void addInfo(Info* moreInfo){};

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Generates the coach's information. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	The coach's information. </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    string generateInfo() const;
 

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Shows all the coach's information in the screen. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <returns>	A vector of strings; </returns>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    vector<string> showInScreen() const;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Sets the coach's birth date. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="newBirthdate">	The new birthdate. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void setBirthDate(Date newBirthdate);

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Sets coach's type. </summary>
    ///
    /// <remarks>	Luís, 20/11/2016. </remarks>
    ///
    /// <param name="newType">	New coach's type. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void setCoachType(CoachType newType);
};
